Role: You are a senior web designer/developer working inside Lovable AI.
Project: Update the existing “I Website Design” template for Kattali Textile Ltd. (KTL).
Hard rule: Do not change layout, sections, spacing, or copy except what’s listed here.

Goals

Remove About and Sustainability from the header nav.

Change header color & menu style.

Improve mobile UI/UX: smaller type, compact spacing, animated menu.

Replace any black color with KTL base colors.

Header color must be half red / half blue.

Add React animations to every clickable element (buttons, links, nav, cards), with different animation per control.

Everything else remains unchanged.

Brand tokens (use globally)
--brand-red:#8B0000;   /* Primary */
--brand-blue:#0EA5A5;  /* Accent */
--text:#222;
--bg:#fff;
--muted:#666;

Header (desktop & tablet)

Nav (order): Home, Certifications, Clients, Careers, Investors, Contact

CTAs: “Careers” (primary), “Investor Info” (secondary)

Background: exact 50/50 split — left #8B0000, right #0EA5A5

background: linear-gradient(90deg,#8B0000 0 50%, #0EA5A5 50% 100%);


Links are white; hover = 92% opacity; active = underline + subtle top inset highlight.

Sticky with a light shadow.

Mobile (≤768px)

Keep structure; only adjust type scale + menu behavior.

Root font ~15px; H1 22–24px; H2 18–20px; body 15–16px.

Header keeps the 50/50 split bar.

Menu button: icon-only hamburger.

Drawer: slides from top; white background; links #222; CTAs stacked at bottom.

Color replacement

Replace #000 backgrounds/accents with #8B0000 or #0EA5A5 contextually.

Replace black text with #222.

Maintain WCAG AA contrast.

React Animations (micro-interactions on every clickable)

Library preference: Use Framer Motion if available; otherwise use the provided CSS + minimal JS fallback. Respect prefers-reduced-motion.

Variant mapping (different effect per control):

Primary CTA (“Careers”) → bounceGlow (quick scale + soft glow pulse on click)

Secondary CTA (“Investor Info”) → rippleBlue (ink ripple using brand blue)

Header nav links → underlineSlide on hover; pop on click

Mobile hamburger → morphToX (rotate + line morph), drawer items staggerSlide

Card/link tiles (if clickable) → press (scale down 0.97 + shadow deepen)

Text links in body/footer → inkUnderline (left→right underline sweep)

Chips/pills/tags → tilt (1–2° tilt + lift on hover)

Timings (snappy):

Hover: 90–140ms; Click/Tap: 160–240ms; Drawer: 240–280ms.

Easing: cubic-bezier(.2,.8,.2,1); keep subtle.

If Framer Motion is allowed

Create a small wrapper so different buttons “react differently” by prop:

// components/Clickable.tsx
import {motion} from "framer-motion";
type V = "bounceGlow"|"rippleBlue"|"pop"|"press"|"tilt";
const variants = {
  pop: { whileTap:{scale:.96}, whileHover:{scale:1.02} },
  press: { whileTap:{scale:.97, boxShadow:"0 6px 18px rgba(0,0,0,.12)"} },
  tilt: { whileHover:{rotate:-1, y:-2} },
  bounceGlow: {
    whileHover:{scale:1.03},
    whileTap:{scale:.95, boxShadow:"0 0 0 8px rgba(139,0,0,.12)"}
  },
  rippleBlue: { whileTap:{scale:.98, boxShadow:"0 0 0 10px rgba(14,165,165,.14)"} }
};
export function Clickable({variant="pop", as="button", children, ...props}: any){
  const Comp:any = motion[as] || motion.button;
  return <Comp {...variants[variant]} {...props}>{children}</Comp>;
}


Apply variants:

Primary CTA button → <Clickable variant="bounceGlow" className="button-primary">Careers</Clickable>

Secondary CTA → variant="rippleBlue"

Nav links → wrap anchors: <Clickable as="a" variant="pop" ...>

Card wrappers → variant="press"

Pills/Chips → variant="tilt"

If Framer Motion is NOT allowed (CSS + minimal JS)

Add this Custom CSS (append to previous CSS block):

/* ========== Micro-interactions (fallback) ========== */
@media (prefers-reduced-motion:no-preference){
  .fx-pop:hover{ transform:translateY(-1px) scale(1.02); }
  .fx-pop:active{ transform:scale(.96); }

  .fx-press:active{ transform:scale(.97); box-shadow:0 6px 18px rgba(0,0,0,.12); }

  .fx-tilt:hover{ transform:rotate(-1deg) translateY(-2px); }

  .fx-bounceGlow:hover{ transform:scale(1.03); }
  .fx-bounceGlow:active{ box-shadow:0 0 0 10px rgba(139,0,0,.12); transform:scale(.95); }

  .fx-underlineSlide{
    background-image:linear-gradient(currentColor,currentColor);
    background-position:0 100%;
    background-repeat:no-repeat;
    background-size:0% 2px; transition:background-size .14s ease;
  }
  .fx-underlineSlide:hover{ background-size:100% 2px; }

  .fx-inkUnderline{ position:relative; }
  .fx-inkUnderline::after{
    content:""; position:absolute; left:0; right:100%; bottom:-2px; height:2px; background:currentColor;
    transition:right .16s ease;
  }
  .fx-inkUnderline:hover::after{ right:0; }

  /* Ripple */
  .fx-rippleBlue{ position:relative; overflow:hidden; }
  .fx-rippleBlue .r{ position:absolute; border-radius:999px; background:rgba(14,165,165,.22);
    transform:translate(-50%,-50%); pointer-events:none; animation:ripple .48s ease-out forwards; }
  @keyframes ripple{ from{ width:0; height:0; opacity:.5; } to{ width:260px; height:260px; opacity:0; } }

  /* Hamburger morph */
  .ham{ width:24px; height:18px; position:relative; display:inline-block; }
  .ham span{ position:absolute; left:0; right:0; height:2px; background:#fff; transition:transform .24s ease, opacity .24s ease; }
  .ham span:nth-child(1){ top:0; } .ham span:nth-child(2){ top:8px; } .ham span:nth-child(3){ bottom:0; }
  .ham.active span:nth-child(1){ transform:translateY(8px) rotate(45deg); }
  .ham.active span:nth-child(2){ opacity:0; }
  .ham.active span:nth-child(3){ transform:translateY(-8px) rotate(-45deg); }
}


Add this tiny JS to create ripples on click (do not alter other code):

document.addEventListener('click', (e)=>{
  const el = e.target.closest('.fx-rippleBlue');
  if(!el) return;
  const r = document.createElement('span');
  r.className = 'r';
  const rect = el.getBoundingClientRect();
  r.style.left = (e.clientX - rect.left) + 'px';
  r.style.top  = (e.clientY - rect.top)  + 'px';
  el.appendChild(r);
  setTimeout(()=>r.remove(), 500);
});


Apply classes (different per control):

Primary CTA (“Careers”) → button-primary fx-bounceGlow

Secondary CTA (“Investor Info”) → button-secondary fx-rippleBlue

Header nav links → fx-underlineSlide (plus fx-pop on the anchor)

Body/footer links → fx-inkUnderline

Clickable cards/tiles → fx-press

Pills/Chips → fx-tilt

Mobile hamburger button → wrap 3 spans inside .ham; toggle .active when drawer opens.

Animations (global)

Header appear: fade + 8px slide-down (220ms).

Mobile drawer: slide/fade (260ms).

Buttons: scale to 1.03 on hover/focus (100ms).

Respect prefers-reduced-motion.

Accessibility & QA

Focus rings: 2px outline in #0EA5A5.

Mobile hit targets ≥ 44px.

Test header split at 320/390/768/1280 widths.

No layout shifts.

All content & sections unchanged except the items above.